{"version":3,"sources":["Service/EventService.tsx","Context/EventContext.tsx","pages/Events/components/EventItem.tsx","pages/Events/components/Filter.tsx","pages/Events/index.tsx","pages/Details.tsx","pages/Fav.tsx","Routers/index.tsx","components/NavBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getEventDetails","a","request","Request","method","headers","Headers","Accept","fetch","response","json","data","console","error","EventContext","createContext","setData","viewFilter","setViewFilter","like","setLike","fav","setFav","likeList","setLikeList","useEventContext","useContext","EventItem","props","item","actName","address","startTime","endTime","imageUrl","actId","addFavor","favEvent","localStorage","getItem","JSON","parse","map","indexOf","filter","obj","unshift","setItem","stringify","useEffect","newFav","getFav","some","hoverable","style","width","margin","cover","alt","src","className","HeartTwoTone","onClick","twoToneColor","format","to","Search","Input","Filter","useState","sortType","setSortType","newData","cityName","substring","set","Set","result","has","add","sort","b","localeCompare","Date","valueOf","placeholder","allowClear","enterButton","size","onSearch","value","newItems","includes","wrap","then","city","filterArea","choose","Events","Details","useParams","loading","cycle","href","website","target","rel","description","Fav","Routers","path","exact","NavBar","current","key","setKey","e","selectedKeys","mode","display","justifyContent","Item","App","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f8fe1d3.chunk.js","sourcesContent":["export async function getEventDetails() {\n  try {\n    const url =\n      'https://cloud.culture.tw/frontsite/trans/SearchShowAction.do?method=doFindFestivalTypeJ'\n    const request = new Request(url, {\n      method: 'GET',\n      headers: new Headers({\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }),\n    })\n\n    const response = await fetch(request)\n    const data = await response.json()\n    return data\n  } catch (err) {\n    console.error('error', err)\n  }\n}\n","import { createContext, useContext } from 'react'\n\ntype Event = {\n  data: any[]\n  setData: (c: any) => void\n  viewFilter: any[]\n  setViewFilter: (c: any) => void\n  like:boolean\n  setLike: (c: any) => void\n  fav: any[]\n  setFav: (c: any) => void\n  likeList: any[]\n  setLikeList: (c: any) => void\n}\n\nexport const EventContext = createContext<Event>({\n  data: [],\n  setData: () => {/**/},\n  viewFilter: [],\n  setViewFilter: () => {/**/},\n  like:false,\n  setLike: () => {/**/},\n  fav: [],\n  setFav:() => {/**/},\n  likeList: [],\n  setLikeList:() => {/**/},\n  // data: {},\n  // setData: {} || undefined,\n  // viewFilter: {\n  //   eventDetails: [] || undefined\n  // },\n  // setViewFilter: {} || undefined,\n})\n\nexport const useEventContext = () => useContext(EventContext)\n","import React,{ useEffect } from 'react'\nimport { Button, Card } from 'antd'\nimport { HeartTwoTone } from '@ant-design/icons';\nimport Moment from 'react-moment'\nimport { Link } from 'react-router-dom'\nimport { useEventContext } from '../../../Context/EventContext'\n\nfunction EventItem (props: any) {\n  const { item } = props\n  const { actName, address, startTime, endTime, imageUrl, actId } = item\n  const {like, setLike,fav, setFav} =useEventContext()\n    const addFavor = () =>{\n        let favEvent:any = []\n        if(localStorage.getItem('favEvent'))\n            favEvent = JSON.parse(localStorage.getItem('favEvent') || '{}')\n        if(favEvent.map((item:any)=> item.actId).indexOf(actId) > -1) {\n            favEvent = favEvent.filter((item:any)=>{\n                return item.actId !== actId\n            })\n        } else {\n            const obj = {\n                actId,\n                actName,\n                address,\n                startTime,\n                endTime,\n                imageUrl\n            }\n            favEvent.unshift(obj)\n        }\n        localStorage.setItem('favEvent', JSON.stringify(favEvent))\n        setLike(!like)\n    }\n\n    useEffect(() => {\n        const getFav = () => {\n            const newFav:any = JSON.parse(localStorage.getItem('favEvent') || '[]')\n            setFav(newFav)\n        }\n        getFav()\n    }, [like])\n\n\n  return (\n    <>\n        {fav?.some((item:any)=>item.actId===actId) ?\n        (<Card\n          hoverable\n          style={{ width: 350, margin: '1rem' }}\n          cover={\n            <img\n              alt='example'\n              src={`https://cloud.culture.tw${imageUrl}`}\n              className='img'\n            />\n          }\n        >\n          <HeartTwoTone className='icon' onClick={addFavor} twoToneColor=\"#eb2f96\"/>\n          <p className='title'>{actName}</p>\n          <p>{address}</p>\n          <p><Moment format='YYYY/MM/DD'>{startTime}</Moment>~\n          <Moment format='YYYY/MM/DD'>{endTime}</Moment></p>\n            <Button><Link to={`details/${actId}`}> 查看詳細</Link></Button>\n        </Card> ):   (<Card\n                hoverable\n                style={{ width: 350, margin: '1rem' }}\n                cover={\n                    <img\n                        alt='example'\n                        src={`https://cloud.culture.tw${imageUrl}`}\n                        className='img'\n                    />\n                }\n            >\n                <HeartTwoTone className='icon' onClick={addFavor} twoToneColor=\"lightgrey\" />\n                <p className='title'>{actName}</p>\n                <p>{address}</p>\n                <p><Moment format='YYYY/MM/DD'>{startTime}</Moment>~\n                    <Moment format='YYYY/MM/DD'>{endTime}</Moment></p>\n                <Button><Link to={`details/${actId}`}> 查看詳細</Link></Button>\n            </Card> )\n\n        }\n    </>\n  )\n}\n\nexport default EventItem\n","import React, { useEffect, useState } from 'react'\nimport { Button, Input, Space } from 'antd'\nimport { useEventContext } from '../../../Context/EventContext'\nimport { getEventDetails } from '../../../Service/EventService'\n\nconst { Search } = Input\n\nfunction Filter():any {\n  const { data, setViewFilter } = useEventContext()\n  const [sortType, setSortType] = useState<boolean>(true)\n  const newData = [...data]\n        newData.map((item: any) => {\n            return (item.cityName = item.cityName.substring(0, 3))\n        })\n        const set = new Set()\n         const result = newData.filter((item: any) =>\n            !set.has(item.cityName) ? set.add(item.cityName) : false\n        )\n        result.sort((a: any, b: any) => a.cityName.localeCompare(b.cityName))\n\n  const choose = (city: string) => {\n    const filterArea = newData.filter((item: any) => {\n      return item.cityName.indexOf(city) !== -1\n    })\n    setViewFilter(filterArea)\n  }\n\n  useEffect(() => {\n    const sortItems = () => {\n      if (sortType) {\n        newData.sort(function (a: any, b: any) {\n\n          return new Date(a.endTime).valueOf()  - new Date(b.endTime).valueOf()\n        })\n        setViewFilter(newData)\n      } else {\n        newData.sort(function (a: any, b: any) {\n\n          return new Date(b.endTime).valueOf()  - new Date(a.endTime).valueOf()\n        })\n        setViewFilter(newData)\n      }\n    }\n    sortItems()\n  }, [sortType])\n\n  const onSearch = (value: string) => {\n    const newItems = data.filter((item: any) => {\n      return item.actName.includes(value)\n    })\n    setViewFilter(newItems)\n  }\n\n  return (\n    <>\n        <div className='search'>\n            <Search\n                placeholder='找活動'\n                allowClear\n                enterButton='Search'\n                size='large'\n                onSearch={onSearch}\n            />\n        </div>\n        <div className='container'>\n            <p>地區篩選</p>\n            <Space size='small' wrap>\n                <Button\n                    onClick={() => {\n                        getEventDetails().then((item: any) => {\n                            setViewFilter(item)\n                        })\n                    }}\n                >\n                    全部\n                </Button>\n                {result?.map((item: any) => {\n                    return (\n                        <Button\n                            key={item.actId}\n                            onClick={() => {\n                                choose(item.cityName)\n                            }}\n                        >\n                            {item.cityName}\n                        </Button>\n                    )\n                })}\n            </Space>\n        </div>\n        <div className='search'>\n            <p>時間排序</p>\n            <Button\n                onClick={() => {\n                    setSortType(!sortType)\n                }}\n            >\n                截止日期排序\n            </Button>\n        </div>\n    </>\n  )\n}\n\nexport default Filter\n","import React, { useEffect } from 'react'\nimport { getEventDetails } from '../../Service/EventService'\nimport { useEventContext } from '../../Context/EventContext'\nimport EventItem from './components/EventItem'\nimport Filter from './components/Filter'\nimport { Space } from 'antd'\n\nfunction Events () {\n  const { setData, viewFilter, setViewFilter } = useEventContext()\n\n\n    useEffect(() => {\n      getEventDetails().then((item: any[]) => {\n        setData(item)\n        setViewFilter(item)\n      })\n  }, [])\n  return (\n    <>\n      <h2 className='heading'>台灣節慶</h2>\n      <Filter />\n      <div className='container'>\n        <Space size='middle' wrap>\n            {viewFilter?.map((item: any) => {\n            return <EventItem item={item} key={item.actId} />\n          })}\n        </Space>\n      </div>\n    </>\n  )\n}\n\nexport default Events\n","import React from 'react'\nimport { useEventContext } from '../Context/EventContext'\nimport { useParams } from 'react-router-dom'\n\ninterface ParamTypes {\n  actId: string | undefined\n}\nfunction Details() {\n  const { data } = useEventContext()\n  const { actId } = useParams<ParamTypes>()\n\n  const newData: any = data.filter((item: any) => {\n    return item.actId == actId\n  })\n  return (\n    <>\n      {newData?.map((item: any) => {\n        return (\n          <>\n            <div key={item.actId}>\n            <h2 className='heading'>{item.actName}</h2>\n\n            <div className='wrap'>\n              <img\n                alt='example'\n                src={`https://cloud.culture.tw${item.imageUrl}`}\n                loading='lazy'\n                className='detailImg'\n              />\n              <p>時間 : {item.cycle} </p>\n              <p>地點 : {item.address} </p>\n              <p>\n                活動網址 :\n                <a href={item.website} target='_blank' rel='noreferrer'>\n                  {item.actName}\n                </a>\n              </p>\n              <p>簡介：</p>\n              <p>{item.description}</p>\n            </div>\n            </div>\n          </>\n        )\n      })}\n    </>\n  )\n}\nexport default Details\n","import React from 'react'\r\nimport { useEventContext } from \"../Context/EventContext\";\r\nimport { Space } from \"antd\";\r\nimport EventItem from './Events/components/EventItem'\r\n\r\nfunction Fav () {\r\n    const { fav } =useEventContext()\r\n\r\n    return (\r\n        <>\r\n            <h2 className='heading'>我的最愛</h2>\r\n            <div className='container'>\r\n                <Space size='middle' wrap>\r\n                    {fav?.map((item:any)=> <EventItem item={item} key={item.actId}/> )}\r\n                </Space>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Fav","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Events from '../pages/Events/index'\nimport Details from '../pages/Details'\nimport Fav from '../pages/Fav'\n\nfunction Routers() {\n  return (\n    <>\n        <Switch>\n          <Route path='/iCulture' exact>\n            <Events />\n          </Route>\n          <Route path='/details/:actId'>\n            <Details />\n          </Route>\n          <Route path='/fav' exact>\n            <Fav />\n          </Route>\n        </Switch>\n    </>\n  )\n}\n\nexport default Routers\n","import React from 'react'\r\nimport { Menu } from 'antd';\r\nimport {useState} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NavBar = () => {\r\n    const [key, setKey] = useState({\r\n        current: 'mail',\r\n    })\r\n\r\n    const handleClick = (e:any) => {\r\n        setKey({ current: e.key });\r\n    };\r\n\r\n    const { current } = key;\r\n\r\n        return (\r\n            <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\" style={{display:'flex',justifyContent:'center'}}>\r\n                <Menu.Item key=\"mail\" >\r\n                    <Link to='/iCulture'>台灣節慶專區</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"app\">\r\n                    <Link to='/fav'>我的最愛</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n\r\n}\r\n\r\nexport default NavBar","import React, { useState } from 'react'\nimport Routers from './Routers/index'\nimport NavBar from \"./components/NavBar\";\nimport { EventContext } from './Context/EventContext'\nimport 'antd/dist/antd.css'\nimport './App.scss'\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nfunction App() {\n  const [data, setData] = useState([])\n  const [viewFilter, setViewFilter] = useState([])\n    const [like, setLike] = useState(false);\n    const [fav, setFav] = useState([]);\n    const [likeList, setLikeList] = useState([])\n\n\n  return (\n    <>\n        <Router>\n          <EventContext.Provider\n            value={{\n                data, setData, viewFilter, setViewFilter,like, setLike,fav, setFav,likeList, setLikeList\n            }}\n          >\n              <NavBar/>\n            <Routers />\n          </EventContext.Provider>\n        </Router>\n    </>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}